apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: topic-search
  name: topic-search
spec:
  replicas: 1
  selector:
    matchLabels:
      app: topic-search
  strategy: {}
  template:
    metadata:
      labels:
        app: topic-search
    spec:
      containers:
      - image: aryajasdev/topicsearch:v1
        name: topic-search
        ports:
          - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: topic-search
  name: topic-search
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: topic-search
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  strategy: {}
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
      - image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
        name: elasticsearch
        ports:
          - containerPort: 9200
        env:
        - name: cluster.name
          value: pncs-cluster
        - name: xpack.security.enabled
          value: 'false'
        - name: discovery.type
          value: single-node
        - name: ELASTIC_USERNAME
          value: elastic
        - name: ELASTIC_PASSWORD
          value: tpicap123
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  ports:
  - port: 9200
    protocol: TCP
    targetPort: 9200
  selector:
    app: elasticsearch
status:
  loadBalancer: {}
---